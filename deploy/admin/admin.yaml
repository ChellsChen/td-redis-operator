#apiVersion: v1
#kind: ServiceAccount
#metadata:
#  name: default
#  namespace: redis
#imagePullSecrets:
#- name: harbor-secret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: admin
  namespace: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: admin
  template:
    metadata:
      labels:
        app: admin
    spec:
      serviceAccount: admin
      containers:
      - image: registry.tongdun.me/db/redis-priv-proxy-admin:20200628-a64081d3fd3
        imagePullPolicy: Always
        command:
        - /app/admin
        - --namespace=redis
        name: admin
        volumeMounts:
        - mountPath: /etc/config
          name: config
      volumes:
      - configMap:
          defaultMode: 420
          name: admin
        name: config
---
apiVersion: v1
kind: Service
metadata:
  name: admin
  namespace: redis
spec:
  ports:
  - port: 8088
    targetPort: 8088
  selector:
    app: admin
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: admin
  namespace: redis
imagePullSecrets:
- name: harbor-secret
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: admin
  namespace: redis
rules:
- apiGroups:
  - cache.tongdun.net
  resources:
  - redisclusters
  verbs:
  - create
  - delete
  - update
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cache.tongdun.net 
  resources:
  - redisstandbies
  verbs:
  - create
  - delete
  - update
  - patch
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: admin
  namespace: redis
subjects:
- kind: ServiceAccount
  name: admin
  namespace: redis
roleRef:
  kind: Role
  name: admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: admin-cluster
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - pods
  verbs:
  - create
  - delete
  - update
  - patch
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin-cluster
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin-cluster
subjects:
- kind: ServiceAccount
  name: admin
  namespace: redis
